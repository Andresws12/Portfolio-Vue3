{
	// Place your GLOBAL snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	
	// ðŸ‘‡ Custom Snippets from aypet library components
	  // ðŸ‘‡ Vue3 component
	  "Vue 3 Component": {
		"prefix": "vue3-component",
		"body": [
			"<template>",
			"  <h1>{{ props.label }}</h1>",
			"  <p>Counter: {{ counter }}</p>",
			"  <button @click=\"sumCounter()\">Sum Counter</button>",
			"</template>",
			"",
			"<script lang=\"ts\" setup>",
			"import { ref } from \"vue\";",
			"import type { Ref } from \"vue\";",
			"",
			"const props = defineProps<{",
			"  label: string;",
			"}>();",
			"",
			"const emit = defineEmits<{",
			"  (e: \"change\", num: number): void;",
			"}>();",
			"",
			"const counter: Ref<number> = ref(0);",
			"",
			"const sumCounter = (): void => {",
			"  counter.value++;",
			"  emit(\"change\", counter.value);",
			"};",
			"</script>",
			"",
			"<style lang=\"scss\" scoped></style>",
			""
		  ],
		"description": "Create a vue 3 component"
	  },

	  // ðŸ‘‡ Vue snippets
	      "template": {
        "scope": "vue",
        "prefix": "template",
        "body": [
            "<template>",
            "  $1",
            "</template>"
        ],
        "description": "Create <template> block"
    },
    "script": {
        "scope": "vue",
        "prefix": "script",
        "body": [
            "<script lang=\"ts\">",
            "import { defineComponent } from 'vue';",
            "",
            "export default defineComponent({",
            "  $2",
            "});",
            "</script>"
        ],
        "description": "Create <script> block"
    },
    "script setup": {
        "scope": "vue",
        "prefix": "script setup",
        "body": [
            "<script lang=\"ts\" setup>",
            "defineProps<{ $1 }>();",
            "</script>"
        ],
        "description": "Create <script setup> + <script> blocks"
    },
    "style": {
        "scope": "vue",
        "prefix": "style",
        "body": [
            "<style lang=\"scss\" scoped>",
            "$1",
            "</style>"
        ],
        "description": "Create <style> block"
    },
    "v-for": {
        "scope": "html",
        "prefix": "v-for",
        "body": [
            "<template v-for=\"$1 in $2\">",
            "  $3",
            "</template>"
        ],
        "description": "Create html tag with v-for"
    },
    "v-if": {
        "scope": "html",
        "prefix": "v-if",
        "body": [
            "<template v-if=\"$1\">",
            "  $2",
            "</template>"
        ],
        "description": "Create html tag with v-if"
    },
    "v-else-if": {
        "scope": "html",
        "prefix": "v-else-if",
        "body": [
            "<template v-else-if=\"$1\">",
            "  $2",
            "</template>"
        ],
        "description": "Create html tag with v-else-if"
    },
    "v-else": {
        "scope": "html",
        "prefix": "v-else",
        "body": [
            "<template v-else>",
            "  $2",
            "</template>"
        ],
        "description": "Create html tag with v-else"
    }
}